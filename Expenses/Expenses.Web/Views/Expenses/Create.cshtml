@model Expenses.Model.ExpenseModel;

<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div>
    <h4> Expense </h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MoneySpent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.TextBoxFor(model => model.MoneySpent, new {  @class = "form-control", onkeypress = "return isNumberKey(event)" })
            @Html.ValidationMessageFor(model => model.MoneySpent, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div>
            @Html.TextBoxFor(model => model.Category, new { @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}
<script type="text/javascript">
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            window.alert('Please input the number!');
            return false;
        }
        return true;
    }
</script>